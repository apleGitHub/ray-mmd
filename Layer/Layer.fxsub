float4x4 WorldViewProjMatrix      : WORLDVIEWPROJECTION;

struct Attributes {
    float4 positionOS : POSITION;
};

struct Varyings {
    float4 positionCS : POSITION;
};

Varyings vert(Attributes input)
{
    Varyings output = (Varyings)0;
    output.positionCS = mul(input.positionOS, WorldViewProjMatrix);
    return output;
}

float4 frag(Varyings input) : COLOR
{
    int layer = 0;
    #if LAYER_0
    layer += 1;
    #endif
    #if LAYER_1
    layer += 2;
    #endif
    #if LAYER_2
    layer += 4;
    #endif
    #if LAYER_3
    layer += 8;
    #endif
    #if LAYER_4
    layer += 16;
    #endif
    #if LAYER_5
    layer += 32;
    #endif
    #if LAYER_6
    layer += 64;
    #endif
    #if LAYER_7
    layer += 128;
    #endif
    float f = layer / 255.0;
    return float4(f,f,f,f);
}

technique ObjectTec < string MMDPass = "object";
    string Script = "RenderColorTarget0=;"
                    "Pass=DrawObject;";
> {
    pass DrawObject {
        AlphaBlendEnable = false;
        AlphaTestEnable = false;
        VertexShader = compile vs_3_0 vert();
        PixelShader  = compile ps_3_0 frag();
    }
}

technique ObjectTecBS  < string MMDPass = "object_ss";
    string Script = "RenderColorTarget0=;"
                    "Pass=DrawObject;";
> {
    pass DrawObject {
        AlphaBlendEnable = false;
        AlphaTestEnable = false;
        VertexShader = compile vs_3_0 vert();
        PixelShader  = compile ps_3_0 frag();
    }
}
technique EdgeTec < string MMDPass = "edge"; > { }
technique ShadowTech < string MMDPass = "shadow";  > { }
technique ZplotTec < string MMDPass = "zplot"; > { }